import React from 'react';
import Icon from '../../../components/AppIcon';

const EmailPreview = ({ 
  emailData = {}, 
  reportData = {},
  recipients = [],
  className = '' 
}) => {
  const formatRecipients = (type) => {
    return recipients?.filter(r => r?.type === type)?.map(r => `${r?.name} <${r?.email}>`)?.join(', ');
  };

  const getAttachmentSize = () => {
    // Mock PDF size calculation
    return '2.4 MB';
  };

  const getCurrentDateTime = () => {
    return new Date()?.toLocaleString('es-ES', {
      weekday: 'long',
      year: 'numeric',
      month: 'long',
      day: 'numeric',
      hour: '2-digit',
      minute: '2-digit'
    });
  };

  const getMessageContent = () => {
    if (emailData?.template === 'custom') {
      return emailData?.customMessage || '';
    }
    
    // Return template-based message (this would be generated by EmailComposer)
    return emailData?.message || '';
  };

  return (
    <div className={`bg-card rounded-lg border border-border ${className}`}>
      <div className="flex items-center space-x-3 p-6 border-b border-border">
        <div className="flex items-center justify-center w-10 h-10 bg-accent/10 rounded-lg">
          <Icon name="Eye" size={20} className="text-accent" />
        </div>
        <div>
          <h3 className="text-lg font-semibold text-foreground">
            Vista Previa del Email
          </h3>
          <p className="text-sm text-muted-foreground">
            Revisión antes del envío
          </p>
        </div>
      </div>
      <div className="p-6">
        {/* Email Header */}
        <div className="bg-muted/30 rounded-lg p-4 mb-6 space-y-3">
          <div className="flex items-center justify-between">
            <span className="text-xs font-medium text-muted-foreground uppercase tracking-wide">
              Información del Email
            </span>
            <span className="text-xs text-muted-foreground">
              {getCurrentDateTime()}
            </span>
          </div>

          <div className="space-y-2">
            {formatRecipients('to') && (
              <div className="flex items-start space-x-2">
                <Icon name="Mail" size={14} className="text-muted-foreground mt-0.5" />
                <div className="flex-1 min-w-0">
                  <span className="text-xs font-medium text-foreground">Para:</span>
                  <p className="text-sm text-foreground break-all">
                    {formatRecipients('to')}
                  </p>
                </div>
              </div>
            )}

            {formatRecipients('cc') && (
              <div className="flex items-start space-x-2">
                <Icon name="Copy" size={14} className="text-muted-foreground mt-0.5" />
                <div className="flex-1 min-w-0">
                  <span className="text-xs font-medium text-foreground">CC:</span>
                  <p className="text-sm text-foreground break-all">
                    {formatRecipients('cc')}
                  </p>
                </div>
              </div>
            )}

            {formatRecipients('bcc') && (
              <div className="flex items-start space-x-2">
                <Icon name="EyeOff" size={14} className="text-muted-foreground mt-0.5" />
                <div className="flex-1 min-w-0">
                  <span className="text-xs font-medium text-foreground">CCO:</span>
                  <p className="text-sm text-foreground break-all">
                    {formatRecipients('bcc')}
                  </p>
                </div>
              </div>
            )}

            <div className="flex items-start space-x-2">
              <Icon name="Type" size={14} className="text-muted-foreground mt-0.5" />
              <div className="flex-1 min-w-0">
                <span className="text-xs font-medium text-foreground">Asunto:</span>
                <p className="text-sm text-foreground">
                  {emailData?.subject || 'Sin asunto'}
                </p>
              </div>
            </div>
          </div>
        </div>

        {/* Email Body Preview */}
        <div className="space-y-4">
          <div className="flex items-center space-x-2">
            <Icon name="FileText" size={16} className="text-muted-foreground" />
            <span className="text-sm font-medium text-foreground">
              Contenido del Mensaje
            </span>
          </div>

          <div className="bg-background border border-border rounded-lg p-4 max-h-96 overflow-y-auto">
            {getMessageContent() ? (
              <pre className="text-sm text-foreground whitespace-pre-wrap font-sans leading-relaxed">
                {getMessageContent()}
              </pre>
            ) : (
              <div className="text-center py-8 text-muted-foreground">
                <Icon name="FileText" size={32} className="mx-auto mb-2 opacity-50" />
                <p className="text-sm">No hay contenido de mensaje</p>
                <p className="text-xs">Selecciona una plantilla o escribe un mensaje personalizado</p>
              </div>
            )}
          </div>
        </div>

        {/* Attachments */}
        <div className="mt-6 space-y-3">
          <div className="flex items-center space-x-2">
            <Icon name="Paperclip" size={16} className="text-muted-foreground" />
            <span className="text-sm font-medium text-foreground">
              Archivos Adjuntos
            </span>
          </div>

          <div className="bg-muted/30 rounded-lg p-4">
            <div className="flex items-center space-x-3">
              <div className="flex items-center justify-center w-10 h-10 bg-red-100 rounded-lg">
                <Icon name="FileText" size={20} className="text-red-600" />
              </div>
              <div className="flex-1">
                <p className="text-sm font-medium text-foreground">
                  Reporte_Servicio_ASTAP_{reportData?.internalCode || 'REP-001'}_{new Date()?.toISOString()?.split('T')?.[0]}.pdf
                </p>
                <p className="text-xs text-muted-foreground">
                  Documento PDF • {getAttachmentSize()}
                </p>
              </div>
              <div className="flex items-center space-x-1">
                <Icon name="Shield" size={14} className="text-green-600" />
                <span className="text-xs text-green-600 font-medium">Seguro</span>
              </div>
            </div>
          </div>
        </div>

        {/* Email Footer Info */}
        <div className="mt-6 pt-4 border-t border-border">
          <div className="flex items-center justify-between text-xs text-muted-foreground">
            <div className="flex items-center space-x-4">
              <div className="flex items-center space-x-1">
                <Icon name="Building" size={12} />
                <span>ASTAP Service Reports</span>
              </div>
              <div className="flex items-center space-x-1">
                <Icon name="Calendar" size={12} />
                <span>{new Date()?.toLocaleDateString('es-ES')}</span>
              </div>
            </div>
            <div className="flex items-center space-x-1">
              <Icon name="Lock" size={12} />
              <span>Comunicación Segura</span>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};

export default EmailPreview;